/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.AsistenciaData;
import accesoADatos.ClaseData;
import accesoADatos.MembresiaData;
import accesoADatos.SocioData;
import entidades.Asistencia;
import entidades.Clase;
import entidades.Membresia;
import entidades.Socio;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CCMEW
 */
public class gestionAsistencia extends javax.swing.JInternalFrame {

    private ClaseData cData = null;
    private MembresiaData mData = null;
    private SocioData sData = null;
    private AsistenciaData aData = null;
    private DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form gestionSocios
     */
    public gestionAsistencia() {
        initComponents();
        int x = JFInicio.escritorio.getWidth() - this.getWidth();
        int y = JFInicio.escritorio.getHeight() - this.getHeight();
        setLocation(x / 2, y / 2);
        btnBorrarAsistencia.setEnabled(false);

        cData = new ClaseData();
        mData = new MembresiaData();
        sData = new SocioData();
        aData = new AsistenciaData();
        jDateFAsistencia.setDate(Date.from(Instant.now()));

        llenarComboClases();
        llenarComboSocios();
        armarCabecera();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAsistencia = new javax.swing.JTable();
        jComboBoxSocio = new javax.swing.JComboBox<>();
        jLabelNombre1 = new javax.swing.JLabel();
        jLabelNombre2 = new javax.swing.JLabel();
        jComboBoxClase = new javax.swing.JComboBox<>();
        jLabelNombre3 = new javax.swing.JLabel();
        jDateFAsistencia = new com.toedter.calendar.JDateChooser();
        btnRegistrarAsistencia = new javax.swing.JButton();
        btnBorrarAsistencia = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("GESTION CLASES - ASISTENCIA");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconSalir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 600, 120, 70));

        jTableAsistencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "DNI", "APELLIDO", "NOMBRE", "TELEFONO", "EMAIL"
            }
        ));
        jScrollPane1.setViewportView(jTableAsistencia);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 810, 160));

        jComboBoxSocio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxSocio.setForeground(new java.awt.Color(0, 0, 153));
        jComboBoxSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSocioActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxSocio, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 490, 30));

        jLabelNombre1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNombre1.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre1.setText("Seleccione Socio:");
        jPanel1.add(jLabelNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, 170, 40));

        jLabelNombre2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNombre2.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre2.setText("Seleccione Fecha:");
        jPanel1.add(jLabelNombre2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 170, 40));

        jComboBoxClase.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxClase.setForeground(new java.awt.Color(0, 0, 153));
        jComboBoxClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxClaseActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 490, 30));

        jLabelNombre3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNombre3.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre3.setText("Seleccione Clase:");
        jPanel1.add(jLabelNombre3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 170, 40));

        jDateFAsistencia.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateFAsistenciaPropertyChange(evt);
            }
        });
        jPanel1.add(jDateFAsistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 190, 30));

        btnRegistrarAsistencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconNuevo.png"))); // NOI18N
        btnRegistrarAsistencia.setText("Registrar asistencia");
        btnRegistrarAsistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarAsistenciaActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrarAsistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 530, 190, 70));

        btnBorrarAsistencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconEliminar.png"))); // NOI18N
        btnBorrarAsistencia.setText("Anular asistencia");
        btnBorrarAsistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarAsistenciaActionPerformed(evt);
            }
        });
        jPanel1.add(btnBorrarAsistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 530, -1, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/asistencia.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, -40, 560, 230));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondoFormulario.jpeg"))); // NOI18N
        jPanel1.add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 710));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jComboBoxSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSocioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSocioActionPerformed

    private void jComboBoxClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxClaseActionPerformed
        actualizarTabla();
    }//GEN-LAST:event_jComboBoxClaseActionPerformed

    private void btnRegistrarAsistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarAsistenciaActionPerformed
        Clase claseSelec = (Clase) jComboBoxClase.getSelectedItem();
        Socio socioSelec = (Socio) jComboBoxSocio.getSelectedItem();
        LocalDate fAsis = LocalDate.ofInstant(jDateFAsistencia.getDate().toInstant(), ZoneId.systemDefault());

        //Validar que se haya seleccionado una clase y un socio
        if (claseSelec == null) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ninguna clase.");
            return;
        }
        if (socioSelec == null) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ning√∫n socio.");
            return;
        }
        
        //Recuperamos la lista de asistencia
        List<Socio> lista = aData.socioPorClases(claseSelec.getIdClase(), fAsis);
        
        //Validar que el socio no este anotado
        for (Socio aux : lista) {
            if (aux.getIdSocio() == socioSelec.getIdSocio()) {
                JOptionPane.showMessageDialog(this, "El socio seleccionado ya se encuentra en la clase.");
                return;
            }
        }

        //Validar capacidad de la clase        
        int capacidad = claseSelec.getCapacidad();
        int ocupacion = lista.size();
        if (ocupacion >= capacidad) {
            JOptionPane.showMessageDialog(this, "La capacidad de la clase est√° completa");
            return;
        }
        
        //Validar membresia
        List<Membresia> listaM = mData.membresiasPorSocioYFecha(socioSelec.getIdSocio(),fAsis);
        if(listaM.size()==0){
            JOptionPane.showMessageDialog(this, "El socio no cuenta con membres√≠as activas para la fecha seleccionada.");
            return;
        }
        
        //Validar cant de pases del socio
        Membresia membreActiva = null;
        for(Membresia aux: listaM){
            if(aux.getCantPases()>0){
                membreActiva=aux;
            }
        }
        if(membreActiva==null){
            JOptionPane.showMessageDialog(this, "El socio ha agotado la cantidad de pases disponibles.");
            return;
        }
        
        //Si valido todo, entonces:
        //  -Genera asistencia
        aData.guardarAsistencia(new Asistencia(socioSelec, claseSelec, fAsis));
        //  -Descuenta un pase y actuliza membresia
        membreActiva.setCantPases(membreActiva.getCantPases()-1);
        mData.modificarMembresia(membreActiva);
        //  -Actualiza tabla
        actualizarTabla();
        
        
        
    }//GEN-LAST:event_btnRegistrarAsistenciaActionPerformed

    private void jDateFAsistenciaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateFAsistenciaPropertyChange
        // TODO add your handling code here:
        actualizarTabla();
    }//GEN-LAST:event_jDateFAsistenciaPropertyChange

    private void btnBorrarAsistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarAsistenciaActionPerformed
       
        //Valida que se haya seleccionado una fila.
        int filaSelec = jTableAsistencia.getSelectedRow();
        if(filaSelec<0){
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguna asistencia para borrar.");
            return;
        }
        
        //Valida que est√© seguro de borrar la asistencia
        int confirm = JOptionPane.showConfirmDialog(this, "¬øEst√° seguro que desea borrar la asistencia seleccionada?","Confirmar", JOptionPane.YES_NO_OPTION);
        if (confirm!=JOptionPane.YES_OPTION){
            return;
        }
        
        //Recupera datos del formulario
        int dni = (Integer) modelo.getValueAt(filaSelec, 0);
        Socio socioSelec = sData.buscarSocioPorDni(dni);
        LocalDate fAsis = LocalDate.ofInstant(jDateFAsistencia.getDate().toInstant(), ZoneId.systemDefault());
        Asistencia asistencia = aData.buscarAsistencia(socioSelec, fAsis);
        List<Membresia> listaM = mData.membresiasPorSocioYFecha(socioSelec.getIdSocio(),fAsis);
        Membresia membreActiva = listaM.getLast();
        
        //Si valido todo, entonces:
        //  -Borra asistencia
        aData.eliminarAsistencia(asistencia.getIdAsistencia());
        //  -Suma un pase y actuliza membresia
        membreActiva.setCantPases(membreActiva.getCantPases()+1);
        mData.modificarMembresia(membreActiva);
        //  -Actualiza tabla
        actualizarTabla();
    }//GEN-LAST:event_btnBorrarAsistenciaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrarAsistencia;
    private javax.swing.JButton btnRegistrarAsistencia;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<Clase> jComboBoxClase;
    private javax.swing.JComboBox<Socio> jComboBoxSocio;
    private com.toedter.calendar.JDateChooser jDateFAsistencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelNombre1;
    private javax.swing.JLabel jLabelNombre2;
    private javax.swing.JLabel jLabelNombre3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAsistencia;
    // End of variables declaration//GEN-END:variables

    private void llenarComboClases() {
        //llenarCombo
        List<Clase> lista = cData.listarClases();
        for (Clase item : lista) {
            jComboBoxClase.addItem(item);
        }
        jComboBoxClase.setSelectedIndex(-1);
    }

    private void llenarComboSocios() {
        //llenarCombo
        List<Socio> lista = sData.listarSocios();
        for (Socio item : lista) {
            jComboBoxSocio.addItem(item);
        }
        jComboBoxSocio.setSelectedIndex(-1);
    }

    private void armarCabecera() {
        //armarcabecera
        ArrayList<Object> filaCabecera = new ArrayList<>();
        //filaCabecera.add("ID Asistencia");
        filaCabecera.add("DNI Socio");
        filaCabecera.add("Apellido");
        filaCabecera.add("Nombre");
        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }
        jTableAsistencia.setModel(modelo);
    }

    private void borrarFilasTabla() {
        int indice = modelo.getRowCount() - 1;
        for (int i = indice; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void actualizarTabla() {
        borrarFilasTabla();
        btnBorrarAsistencia.setEnabled(false);

        Clase clase = (Clase) jComboBoxClase.getSelectedItem();
        LocalDate fAsis = LocalDate.ofInstant(jDateFAsistencia.getDate().toInstant(), ZoneId.systemDefault());
        if (clase != null) {
            List<Socio> lista = aData.socioPorClases(clase.getIdClase(), fAsis);
            for (Socio aux : lista) {
                modelo.addRow(new Object[]{aux.getDni(), aux.getApellido(), aux.getNombre()});
            }
            if(lista.size()>0){
                btnBorrarAsistencia.setEnabled(true);
            }
        }
    }
}
