/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.AsistenciaData;
import accesoADatos.ClaseData;
import accesoADatos.MembresiaData;
import accesoADatos.SocioData;
import entidades.Asistencia;
import entidades.Clase;
import entidades.Membresia;
import entidades.Socio;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CCMEW
 */
public class gestionMembresia extends javax.swing.JInternalFrame {

    private ClaseData cData = null;
    private MembresiaData mData = null;
    private SocioData sData = null;
    private AsistenciaData aData = null;
    private DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form gestionSocios
     */
    public gestionMembresia() {
        initComponents();
        int x = JFInicio.escritorio.getWidth() - this.getWidth();
        int y = JFInicio.escritorio.getHeight() - this.getHeight();
        setLocation(x / 2, y / 2);

        cData = new ClaseData();
        mData = new MembresiaData();
        sData = new SocioData();
        aData = new AsistenciaData();
        ///jDateFAsistencia.setDate(Date.from(Instant.now()));

        llenarCombos();
        armarCabecera();
        //actualizarTabla();
        
        //jTableMembre.getColumnModel().getColumn(4).setPreferredWidth(150);
        jTableMembre.setRowHeight(30);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMembre = new javax.swing.JTable();
        jLabelNombre1 = new javax.swing.JLabel();
        jComboBoxSocio = new javax.swing.JComboBox<>();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelNombre3 = new javax.swing.JLabel();
        jLabelNombre2 = new javax.swing.JLabel();
        jDateFFin = new com.toedter.calendar.JDateChooser();
        jDateFInicio = new com.toedter.calendar.JDateChooser();
        jComboBoxPases = new javax.swing.JComboBox<>();
        jLabelNombre4 = new javax.swing.JLabel();
        jTextCosto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("GESTION MEMBRESIAS - ALTA / RENOVACION");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconSalir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 600, 120, 70));

        jTableMembre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "DNI", "APELLIDO", "NOMBRE", "TELEFONO", "EMAIL"
            }
        ));
        jScrollPane1.setViewportView(jTableMembre);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 760, 220));

        jLabelNombre1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNombre1.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre1.setText("Seleccione Socio:");
        jPanel1.add(jLabelNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 170, 40));

        jComboBoxSocio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxSocio.setForeground(new java.awt.Color(0, 0, 153));
        jComboBoxSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSocioActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxSocio, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 490, 30));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconNuevo.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 600, 130, 70));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconEliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 600, 150, 70));

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconGuardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 600, 140, 70));

        jPanel2.setBackground(new java.awt.Color(0, 51, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar membres√≠a:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel2.setToolTipText("Agregar membresia:");
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.setName("Buscar"); // NOI18N
        jPanel2.setOpaque(false);

        jLabelNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNombre.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre.setText("Cantidad de pases:");

        jLabelNombre3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNombre3.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre3.setText("Fecha hasta:");

        jLabelNombre2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNombre2.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre2.setText("Fecha desde:");

        jDateFFin.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateFFinPropertyChange(evt);
            }
        });

        jDateFInicio.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateFInicioPropertyChange(evt);
            }
        });

        jComboBoxPases.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxPases.setForeground(new java.awt.Color(0, 0, 153));

        jLabelNombre4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNombre4.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre4.setText("Costo:");

        jTextCosto.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextCosto.setForeground(new java.awt.Color(0, 51, 153));
        jTextCosto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextCostoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateFInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(jComboBoxPases, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNombre3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNombre4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateFFin, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(jTextCosto))
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPases, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNombre4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNombre3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateFFin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateFInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, 760, 140));
        jPanel2.getAccessibleContext().setAccessibleName("Nueva Membresia");
        jPanel2.getAccessibleContext().setAccessibleDescription("Nueva Membresia");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/membresias.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, -40, 560, 230));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondoFormulario.jpeg"))); // NOI18N
        jPanel1.add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 710));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jComboBoxSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSocioActionPerformed
        actualizarTabla();
    }//GEN-LAST:event_jComboBoxSocioActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void jDateFInicioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateFInicioPropertyChange
        Date fInicio = jDateFInicio.getDate();
        Date hoy = Date.from(Instant.now());
        Date hoyMenos30 = new Date(hoy.getYear(), hoy.getMonth(), hoy.getDate() - 30);
        if (fInicio != null) {
            if (fInicio.before(hoyMenos30)) {
                JOptionPane.showMessageDialog(this, "No puede seleccionar una fecha de inicio de m√°s de 30 d√≠as de antiguedad.");
                jDateFInicio.setDate(hoy);
                return;
            }
            jDateFFin.setDate(new Date(fInicio.getYear(), fInicio.getMonth(), fInicio.getDate() + 30));
        } else {
            jDateFFin.setDate(null);
        }
    }//GEN-LAST:event_jDateFInicioPropertyChange

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        //Valida que se haya seleccionado una fila.
        int filaSelec = jTableMembre.getSelectedRow();
        if (filaSelec < 0) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguna membres√≠a para borrar.");
            return;
        }

        //Valida que est√© seguro de borrar la asistencia
        int confirm = JOptionPane.showConfirmDialog(this, "¬øEst√° seguro que desea borrar la membres√≠a seleccionada?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        //Recupera datos del formulario
        int idMembresia = (Integer) modelo.getValueAt(filaSelec, 0);

        //Si valido todo, entonces:
        //  -Borra membresi
        mData.eliminarMembresia(idMembresia);
        limpiarMembreNueva();
        //  -Actualiza tabla
        actualizarTabla();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        //Validar que se haya seleccionado un socio
        Socio socio = (Socio) jComboBoxSocio.getSelectedItem();
        if (socio == null) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ning√∫n socio.");
            return;
        }

        //Validar que se haya seleccionado una cant de pases
        Integer cantPases = (Integer) jComboBoxPases.getSelectedItem();
        if (cantPases == null) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado la cantidad de pases de la membres√≠a.");
            return;
        }

        //Valida que se haya ingresado un monto
        double costo;
        if (jTextCosto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado el costo de la membres√≠a.");
            return;
        } else {
            
            Pattern p = Pattern.compile("^[+]?[0-9]*\\.?[0-9]+(?:[eE][-+]?[0-9]+)?$");
            Matcher m = p.matcher(jTextCosto.getText());
            if (!m.matches()) {
//                JOptionPane.showMessageDialog(this, "El monto ingresado no es v√°lido.");
                jTextCosto.requestFocus();
                return;
            }
        
            costo = Double.parseDouble(jTextCosto.getText());
        }

        //Valida las fechas
        Date fInicio = jDateFInicio.getDate();
        if (fInicio == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha de inicio para la membres√≠a.");
            return;
        }
        Date fFin = jDateFFin.getDate();
        if (fFin == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha de finalizaci√≥n para la membres√≠a.");
            return;
        }
        LocalDate LDInicio = LocalDate.ofInstant(fInicio.toInstant(), ZoneId.systemDefault());
        LocalDate LDFin = LocalDate.ofInstant(fFin.toInstant(), ZoneId.systemDefault());

        //Valida si se puede agregar la mambres√≠a
        Membresia nueva = new Membresia(socio, cantPases, LDInicio, LDFin, costo, true);
        if (!mData.nuevaMembresiaValida(socio, nueva)) {
            JOptionPane.showMessageDialog(this, "No se puede registrar la nueva membres√≠a. El socio ya tiene una membres√≠a activa para las fechas indicadas.");
            return;
        }

        //Si valido todo, entonces guarda membres√≠a nueva, limpia nueva membres√≠a y actualiza tabla
        mData.guardaMembresia(nueva);
        limpiarMembreNueva();
        actualizarTabla();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void jTextCostoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextCostoFocusLost
        if (!jTextCosto.getText().isEmpty()) {
            Pattern p = Pattern.compile("^[+]?[0-9]*\\.?[0-9]+(?:[eE][-+]?[0-9]+)?$");
            Matcher m = p.matcher(jTextCosto.getText());
            if (!m.matches()) {
                JOptionPane.showMessageDialog(this, "El monto ingresado no es v√°lido.");
//                jTextCosto.setText("");
                jTextCosto.requestFocus();
                return;
            }
        }
    }//GEN-LAST:event_jTextCostoFocusLost

    private void jDateFFinPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateFFinPropertyChange
        Date fInicio = jDateFInicio.getDate();
        Date fFin = jDateFFin.getDate();
        if (fFin != null) {
            if (fInicio == null) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha de inicio para la membres√≠a.");
                jDateFFin.setDate(null);
                return;
            }
            
            if (fFin.before(fInicio)) {
                JOptionPane.showMessageDialog(this, "La fecha de finalizaci√≥n de la membres√≠a debe ser porterior a la fecha de inicio.");
                jDateFFin.setDate(new Date(fInicio.getYear(), fInicio.getMonth(), fInicio.getDate() + 30));
                return;
            }
            
            Date inicioMas60 = new Date(fInicio.getYear(), fInicio.getMonth(), fInicio.getDate() + 60);
            if (fFin.after(inicioMas60)) {
                JOptionPane.showMessageDialog(this, "La duraci√≥n m√°xima de las membres√≠as es de 60 d√≠as.");
                jDateFFin.setDate(new Date(fInicio.getYear(), fInicio.getMonth(), fInicio.getDate() + 30));
                return;
            }
        }
    }//GEN-LAST:event_jDateFFinPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<Integer> jComboBoxPases;
    private javax.swing.JComboBox<Socio> jComboBoxSocio;
    private com.toedter.calendar.JDateChooser jDateFFin;
    private com.toedter.calendar.JDateChooser jDateFInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelNombre1;
    private javax.swing.JLabel jLabelNombre2;
    private javax.swing.JLabel jLabelNombre3;
    private javax.swing.JLabel jLabelNombre4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMembre;
    private javax.swing.JTextField jTextCosto;
    // End of variables declaration//GEN-END:variables

    private void llenarCombos() {
        //llenarCombo
        List<Socio> lista = sData.listarSocios();
        for (Socio item : lista) {
            jComboBoxSocio.addItem(item);
        }
        jComboBoxSocio.setSelectedIndex(-1);

        jComboBoxPases.addItem(8);
        jComboBoxPases.addItem(12);
        jComboBoxPases.addItem(20);
        jComboBoxPases.setSelectedIndex(-1);
    }

    private void armarCabecera() {
        //armarcabecera
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("C√≥digo");
        filaCabecera.add("DNI Socio");
        filaCabecera.add("Apellido");
        filaCabecera.add("Nombre");
        filaCabecera.add("Pases Disponibles");
        filaCabecera.add("Desde:");
        filaCabecera.add("Hasta:");
        filaCabecera.add("Costo");
        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }
        jTableMembre.setModel(modelo);
    }

    private void borrarFilasTabla() {
        int indice = modelo.getRowCount() - 1;
        for (int i = indice; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void actualizarTabla() {
        borrarFilasTabla();
        //btnBorrarAsistencia.setEnabled(false);

        Socio socio = (Socio) jComboBoxSocio.getSelectedItem();
        if (socio != null) {
            List<Membresia> lista = mData.membresiasPorSocio(socio.getIdSocio());

            if (lista != null) {
                for (Membresia aux : lista) {
                    modelo.addRow(new Object[]{aux.getIdMembresia(), aux.getSocio().getDni(), aux.getSocio().getApellido(), aux.getSocio().getNombre(), aux.getCantPases(), aux.getfInicio(), aux.getfFin(), aux.getCosto()});
                }
            }
        }
    }

    private void limpiarCampos() {
        jComboBoxSocio.setSelectedIndex(-1);
        borrarFilasTabla();
        limpiarMembreNueva();
    }

    private void limpiarMembreNueva() {
        jComboBoxPases.setSelectedIndex(-1);
        jTextCosto.setText("");
        jDateFInicio.setDate(null);
        jDateFFin.setDate(null);
    }

}
